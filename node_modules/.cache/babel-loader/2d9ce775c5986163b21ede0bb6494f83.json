{"ast":null,"code":"var _jsxFileName = \"/Users/support/Development/code/phase-3/my-app-frontend/src/LocationContainer.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Search from \"./Search\";\nimport LocationCard from \"./LocationCard\";\n//this component is where we store our locations\nfunction LocationContainer(_ref) {\n  var _this = this;\n  var locations = _ref.locations;\n  ////new array that filters through if name, description or location matches the search terms. Also handles case insensitive matches\n\n  // const filteredLocations = locations.filter(location => {\n  //   return (location.city.toLowerCase().includes(search.toLowerCase())) \n  //   || location.state.toLowerCase().includes(search.toLowerCase())\n  // })\n\n  ////iterating over the filtered array and creating a separate LocationCard for each location\n  var locationCards = locations.map(function (location) {\n    return /*#__PURE__*/React.createElement(LocationCard, {\n      key: location.id,\n      location: location,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    onSearch: setSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"Locations:\"), locationCards);\n}\nexport default LocationContainer;","map":{"version":3,"names":["React","useState","useEffect","Search","LocationCard","LocationContainer","locations","locationCards","map","location","id","setSearch"],"sources":["/Users/support/Development/code/phase-3/my-app-frontend/src/LocationContainer.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Search from \"./Search\";\nimport LocationCard from \"./LocationCard\";\n//this component is where we store our locations\nfunction LocationContainer({locations}) {\n\n  \n////new array that filters through if name, description or location matches the search terms. Also handles case insensitive matches\n\n      // const filteredLocations = locations.filter(location => {\n      //   return (location.city.toLowerCase().includes(search.toLowerCase())) \n      //   || location.state.toLowerCase().includes(search.toLowerCase())\n      // })\n\n      \n////iterating over the filtered array and creating a separate LocationCard for each location\n      const locationCards = locations.map(location => {\n        return <LocationCard \n          key={location.id} \n          location={location} \n          />\n      })\n      \n\n    return (\n        <div>\n          <Search onSearch={setSearch}/>\n          <br />\n          <h1>Locations:</h1>\n                {locationCards}\n        </div>\n    )\n}\n\nexport default LocationContainer;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,YAAY,MAAM,gBAAgB;AACzC;AACA,SAASC,iBAAiB,OAAc;EAAA;EAAA,IAAZC,SAAS,QAATA,SAAS;EAGrC;;EAEM;EACA;EACA;EACA;;EAGN;EACM,IAAMC,aAAa,GAAGD,SAAS,CAACE,GAAG,CAAC,UAAAC,QAAQ,EAAI;IAC9C,oBAAO,oBAAC,YAAY;MAClB,GAAG,EAAEA,QAAQ,CAACC,EAAG;MACjB,QAAQ,EAAED,QAAS;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACjB;EACN,CAAC,CAAC;EAGJ,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAM;IAAC,QAAQ,EAAEE,SAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,eAC9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAM,eACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAI,YAAU,CAAK,EACZJ,aAAa,CAChB;AAEd;AAEA,eAAeF,iBAAiB"},"metadata":{},"sourceType":"module"}
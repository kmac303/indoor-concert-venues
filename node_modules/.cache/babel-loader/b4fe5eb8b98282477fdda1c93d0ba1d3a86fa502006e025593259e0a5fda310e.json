{"ast":null,"code":"var _jsxFileName = \"/Users/support/Development/code/phase-3/my-app-frontend/src/VenueContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Search from \"./Search\";\nimport VenueCard from \"./VenueCard\";\n//this component is where we store our venues\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VenueContainer(_ref) {\n  _s();\n  let {\n    data,\n    setData\n  } = _ref;\n  const [search, setSearch] = useState(\"\");\n  //fetching data from our db.json \n  useEffect(() => {\n    fetch(\"http://localhost:9292/\").then(r => r.json()).then(data => setData(data.venues));\n  }, []);\n  //handles deleting a venue by taking in its id\n  function handleDeleteVenue(id) {\n    const updatedVenueArray = data.filter(venue => venue.id !== id);\n    setData(updatedVenueArray);\n  }\n  ////new array that filters through if name, description or location matches the search terms. Also handles case insensitive matches\n  const filteredVenues = data.filter(venue => {\n    return venue.name.toLowerCase().includes(search.toLowerCase()) || venue.description.toLowerCase().includes(search.toLowerCase()) || venue.location.toLowerCase().includes(search.toLowerCase());\n  });\n  ////iterating over the filtered array and creating a separate VenueCard for each venue\n  const venueCards = filteredVenues.map(venueObj => {\n    return /*#__PURE__*/_jsxDEV(VenueCard, {\n      venue: venueObj,\n      onDeleteVenue: handleDeleteVenue\n    }, venueObj.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearch: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"cards\",\n      children: venueCards\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(VenueContainer, \"/GLerps70H6LPpMRxJUwTVVbb9A=\");\n_c = VenueContainer;\nexport default VenueContainer;\nvar _c;\n$RefreshReg$(_c, \"VenueContainer\");","map":{"version":3,"names":["React","useState","useEffect","Search","VenueCard","VenueContainer","data","setData","search","setSearch","fetch","then","r","json","venues","handleDeleteVenue","id","updatedVenueArray","filter","venue","filteredVenues","name","toLowerCase","includes","description","location","venueCards","map","venueObj"],"sources":["/Users/support/Development/code/phase-3/my-app-frontend/src/VenueContainer.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport Search from \"./Search\";\nimport VenueCard from \"./VenueCard\";\n//this component is where we store our venues\nfunction VenueContainer({data, setData}) {\n  const [search, setSearch] = useState(\"\");\n//fetching data from our db.json \n  useEffect(() => {\n    fetch(\"http://localhost:9292/\")\n      .then((r) => r.json())\n      .then((data) => setData(data.venues)); \n  }, []); \n//handles deleting a venue by taking in its id\n      function handleDeleteVenue(id) {\n        const updatedVenueArray = data.filter(venue => venue.id !== id);\n        setData(updatedVenueArray);\n      }\n////new array that filters through if name, description or location matches the search terms. Also handles case insensitive matches\n      const filteredVenues = data.filter(venue => {\n        return (venue.name.toLowerCase().includes(search.toLowerCase())) \n        || venue.description.toLowerCase().includes(search.toLowerCase())\n        || venue.location.toLowerCase().includes(search.toLowerCase())\n      })\n////iterating over the filtered array and creating a separate VenueCard for each venue\n      const venueCards = filteredVenues.map(venueObj => {\n        return <VenueCard \n          key={venueObj.id} \n          venue={venueObj} \n          onDeleteVenue={handleDeleteVenue}/>\n      })\n\n    return (\n        <div>\n          <Search onSearch={setSearch}/>\n            <ul className=\"cards\">\n                {venueCards}\n            </ul>\n        </div>\n    )\n}\n\nexport default VenueContainer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,SAAS,MAAM,aAAa;AACnC;AAAA;AACA,SAASC,cAAc,OAAkB;EAAA;EAAA,IAAjB;IAACC,IAAI;IAAEC;EAAO,CAAC;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C;EACEC,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,wBAAwB,CAAC,CAC5BC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,EAAE,CAAC,CACrBF,IAAI,CAAEL,IAAI,IAAKC,OAAO,CAACD,IAAI,CAACQ,MAAM,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EACR;EACM,SAASC,iBAAiB,CAACC,EAAE,EAAE;IAC7B,MAAMC,iBAAiB,GAAGX,IAAI,CAACY,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACH,EAAE,KAAKA,EAAE,CAAC;IAC/DT,OAAO,CAACU,iBAAiB,CAAC;EAC5B;EACN;EACM,MAAMG,cAAc,GAAGd,IAAI,CAACY,MAAM,CAACC,KAAK,IAAI;IAC1C,OAAQA,KAAK,CAACE,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACf,MAAM,CAACc,WAAW,EAAE,CAAC,IAC5DH,KAAK,CAACK,WAAW,CAACF,WAAW,EAAE,CAACC,QAAQ,CAACf,MAAM,CAACc,WAAW,EAAE,CAAC,IAC9DH,KAAK,CAACM,QAAQ,CAACH,WAAW,EAAE,CAACC,QAAQ,CAACf,MAAM,CAACc,WAAW,EAAE,CAAC;EAChE,CAAC,CAAC;EACR;EACM,MAAMI,UAAU,GAAGN,cAAc,CAACO,GAAG,CAACC,QAAQ,IAAI;IAChD,oBAAO,QAAC,SAAS;MAEf,KAAK,EAAEA,QAAS;MAChB,aAAa,EAAEb;IAAkB,GAF5Ba,QAAQ,CAACZ,EAAE;MAAA;MAAA;MAAA;IAAA,QAEmB;EACvC,CAAC,CAAC;EAEJ,oBACI;IAAA,wBACE,QAAC,MAAM;MAAC,QAAQ,EAAEP;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,eAC5B;MAAI,SAAS,EAAC,OAAO;MAAA,UAChBiB;IAAU;MAAA;MAAA;MAAA;IAAA,QACV;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEd;AAAC,GAnCQrB,cAAc;AAAA,KAAdA,cAAc;AAqCvB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}